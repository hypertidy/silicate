# Generated by roxygen2: do not edit by hand

S3method(ARC,PATH)
S3method(ARC,default)
S3method(PATH,SC)
S3method(PATH,TRI)
S3method(PATH,default)
S3method(PATH0,PATH0)
S3method(PATH0,default)
S3method(SC,TRI)
S3method(SC,default)
S3method(SC0,SC)
S3method(SC0,SC0)
S3method(SC0,TRI)
S3method(SC0,default)
S3method(TRI,PATH)
S3method(TRI,PATH0)
S3method(TRI,TRI)
S3method(TRI,TRI0)
S3method(TRI,default)
S3method(TRI0,PATH)
S3method(TRI0,PATH0)
S3method(TRI0,TRI)
S3method(TRI0,default)
S3method(filter,SC)
S3method(plot,ARC)
S3method(plot,PATH)
S3method(plot,PATH0)
S3method(plot,SC)
S3method(plot,SC0)
S3method(plot,TRI)
S3method(plot,TRI0)
S3method(print,sc)
S3method(sc_arc,ARC)
S3method(sc_arc,default)
S3method(sc_coord,ARC)
S3method(sc_coord,LINESTRING)
S3method(sc_coord,Lines)
S3method(sc_coord,MULTILINESTRING)
S3method(sc_coord,MULTIPOINT)
S3method(sc_coord,MULTIPOLYGON)
S3method(sc_coord,PATH)
S3method(sc_coord,PATH0)
S3method(sc_coord,POINT)
S3method(sc_coord,POLYGON)
S3method(sc_coord,Polygons)
S3method(sc_coord,SC)
S3method(sc_coord,SC0)
S3method(sc_coord,TRI)
S3method(sc_coord,default)
S3method(sc_coord,list)
S3method(sc_coord,ltraj)
S3method(sc_coord,matrix)
S3method(sc_coord,sf)
S3method(sc_coord,sfc)
S3method(sc_coord,sfc_LINESTRING)
S3method(sc_coord,sfc_MULTILINESTRING)
S3method(sc_coord,sfc_MULTIPOLYGON)
S3method(sc_coord,sfc_POINT)
S3method(sc_coord,trip)
S3method(sc_edge,PATH)
S3method(sc_edge,SC)
S3method(sc_edge,SC0)
S3method(sc_edge,TRI)
S3method(sc_edge,default)
S3method(sc_end,ARC)
S3method(sc_end,PATH)
S3method(sc_end,PATH0)
S3method(sc_end,SC)
S3method(sc_end,SC0)
S3method(sc_end,TRI)
S3method(sc_node,ARC)
S3method(sc_node,PATH)
S3method(sc_node,SC)
S3method(sc_node,SC0)
S3method(sc_node,default)
S3method(sc_object,Spatial)
S3method(sc_object,TRI)
S3method(sc_object,default)
S3method(sc_object,sf)
S3method(sc_object,sfc)
S3method(sc_object,trip)
S3method(sc_path,ARC)
S3method(sc_path,GEOMETRYCOLLECTION)
S3method(sc_path,LINESTRING)
S3method(sc_path,MULTILINESTRING)
S3method(sc_path,MULTIPOINT)
S3method(sc_path,MULTIPOLYGON)
S3method(sc_path,PATH)
S3method(sc_path,PATH0)
S3method(sc_path,POINT)
S3method(sc_path,POLYGON)
S3method(sc_path,SC)
S3method(sc_path,SC0)
S3method(sc_path,Spatial)
S3method(sc_path,default)
S3method(sc_path,list)
S3method(sc_path,ltraj)
S3method(sc_path,matrix)
S3method(sc_path,sf)
S3method(sc_path,sfc)
S3method(sc_path,trip)
S3method(sc_segment,PATH)
S3method(sc_segment,default)
S3method(sc_start,ARC)
S3method(sc_start,PATH)
S3method(sc_start,PATH0)
S3method(sc_start,SC)
S3method(sc_start,SC0)
S3method(sc_start,TRI)
S3method(sc_uid,Spatial)
S3method(sc_uid,data.frame)
S3method(sc_uid,numeric)
S3method(sc_vertex,ARC)
S3method(sc_vertex,PATH)
S3method(sc_vertex,PATH0)
S3method(sc_vertex,SC)
S3method(sc_vertex,SC0)
S3method(sc_vertex,TRI)
S3method(sc_vertex,TRI0)
S3method(sc_vertex,default)
export("%>%")
export(ARC)
export(PATH)
export(PATH0)
export(SC)
export(SC0)
export(TRI)
export(TRI0)
export(filter)
export(sc_arc)
export(sc_colours)
export(sc_coord)
export(sc_edge)
export(sc_end)
export(sc_node)
export(sc_object)
export(sc_path)
export(sc_segment)
export(sc_start)
export(sc_uid)
export(sc_vertex)
export(tri_area)
importFrom(dplyr,"%>%")
importFrom(dplyr,anti_join)
importFrom(dplyr,bind_cols)
importFrom(dplyr,bind_rows)
importFrom(dplyr,filter)
importFrom(dplyr,group_by)
importFrom(dplyr,inner_join)
importFrom(dplyr,mutate)
importFrom(dplyr,row_number)
importFrom(dplyr,select)
importFrom(dplyr,select_)
importFrom(dplyr,slice)
importFrom(dplyr,summarize)
importFrom(dplyr,tally)
importFrom(dplyr,transmute_)
importFrom(dplyr,ungroup)
importFrom(gibble,gibble)
importFrom(graphics,plot)
importFrom(graphics,polygon)
importFrom(graphics,segments)
importFrom(magrittr,"%>%")
importFrom(methods,.hasSlot)
importFrom(methods,slot)
importFrom(methods,slotNames)
importFrom(rlang,.data)
importFrom(stats,setNames)
importFrom(tibble,as_tibble)
importFrom(tibble,tibble)
importFrom(utils,head)
importFrom(utils,tail)
